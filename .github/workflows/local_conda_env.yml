name: Build PIC using local conda env (MPI, OpenMP, BLAS)

on: [push]

jobs:
  test_conda:
    name: Build testing with ${{ matrix.compiler }}  on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # mpi on windows is a nightmare
        os: ["ubuntu-latest"]
        compiler: ["gfortran"]
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          miniforge-version: latest

      - name: Install Our own environment
        shell: bash -el {0}
        run: |
          conda env create --name pic --file conda_envs/no_compiler_env.yml

      - name: Install our own compiler using conda
        shell: bash -el {0}
        run: |
          conda install -c conda-forge -n pic ${{matrix.compiler}}=14.2.0

      - name: Execute cmake and build
        shell: bash -el {0}
        run: |
          conda activate pic
          export FC=${{matrix.compiler}}
          cmake -G "Ninja" -DPIC_ENABLE_MPI=ON -DPIC_ENABLE_OMP=ON -DPIC_ENABLE_BLAS=ON -DPIC_DEFAULT_INT8=ON -DBLAS_LIBRARIES=$CONDA_PREFIX/lib/libopenblas64_.a -B build
          cmake --build build

      - name: Run unit tests
        shell: bash -el {0}
        run: |
          conda activate pic
          ctest --test-dir build -V

      - name: Clean build dir
        shell: bash -el {0}
        run: |
          rm -rf build

      - name: Execute cmake and build
        shell: bash -el {0}
        run: |
          conda activate pic
          export FC=${{matrix.compiler}}
          cmake -G "Ninja" -DPIC_ENABLE_MPI=ON -DPIC_ENABLE_OMP=ON -DPIC_ENABLE_BLAS=ON -B build
          cmake --build build

      - name: Run unit tests
        shell: bash -el {0}
        run: |
          conda activate pic
          ctest --test-dir build -V

      - name: Clean build dir
        shell: bash -el {0}
        run: |
          rm -rf build
