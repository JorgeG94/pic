name: Conda setup

on: [pull_request, push]

jobs:
  test_conda:
    name: Example (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        #os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        os: ["ubuntu-latest"]
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          miniforge-version: latest

      - name: Install Our own environment
        shell: bash -el {0}
        run: |
          conda env create --name pic --file environment.yml

      - name: Execute cmake
        shell: bash -el {0}
        run: |
          conda activate pic
          cmake -B build

#      - name: Install gcc compilers on Windows
#        if: runner.os == 'Windows'
#        shell: bash -el {0}
#        run: |
#           conda install -c conda-forge -n pic gfortran_win-64
#
#      - name: Install clang with openmp compiler on macOS
#        if: runner.os == 'macOS'
#        shell: bash -el {0}
#        run: |
#           conda install -c conda-forge -n pic p

#      - name: Install anuga package
#        shell: bash -el {0}
#        run: |
#          conda activate anuga_env
#          pip install --no-build-isolation -v .
#
#      - name: Test package
#        shell: bash -el {0}
#        run: |
#          conda activate anuga_env
#          cd ..
#          export OMP_NUM_THREADS=1
#          pytest -p no:faulthandler -q --pyargs anuga
