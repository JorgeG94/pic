name: Conda setup

on: [pull_request, push]

jobs:
  test_conda:
    name: Example (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # mpi on windows is a nightmare
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        compiler: ["gfortran", "ifx", "lfortran", "flang-new"]
        exclude:
          - os: macos-latest
            compiler: lfortran
          - os: macos-latest
            compiler: flang-new
          - os: macos-latest
            compiler: ifx
          - os: windows-latest
            compiler: lfortran
          - os: windows-latest
            compiler: ifx
          - os: windows-latest
            compiler: flang-new
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          miniforge-version: latest

      - name: Install Our own environment
        shell: bash -el {0}
        run: |
          conda env create --name pic --file no_compiler_env.yml

      - name: Install our own compiler using conda
        shell: bash -el {0}
        run: |
          conda install -c conda-forge -n pic ${{matrix.compiler}}

      - name: Execute cmake and build on Windows
        if: runner.os == 'Windows'
        shell: bash -el {0}
        run: |
          conda activate pic
          export FC=${{matrix.compiler}}
          #cmake -DCMAKE_AR=gcc-ar -G "Ninja" -B build
          cmake -G "Ninja" -B build
          cmake --build build

      - name: Execute cmake and build
        if: runner.os != 'Windows'
        shell: bash -el {0}
        run: |
          conda activate pic
          export FC=${{matrix.compiler}}
          cmake -G "Ninja" -DENABLE_MPI=ON -B build
          cmake --build build
